/**
 * Warframe.js by Luca Kiebel
 * Docs and more: https://github.com/lucakiebel/Warframe.js
 */
 let Warframe=class{constructor(a){if(a.platform)this.platform=a.platform;else throw new Error("Platform must be set in options");this.endpoint=`https://api.warframestat.us/${this.platform}`}get heartbeat(){return new Promise((a,b)=>{fetch("https://api.warframestat.us/pc").then(c=>c.json()).then(()=>a("Success")).catch(c=>b(c))})}get alerts(){return new Promise((a,b)=>{fetch(`${this.endpoint}/alerts`).then(c=>c.json()).then(c=>{let d=c;d=d.map(f=>{return{id:f.id,since:new Date(f.activation),until:new Date(f.expiry),countdown:f.eta,thumbnail:f.mission.reward.thumbnail,mission:{node:f.mission.node,type:f.mission.type,archwing:f.mission.archwingRequired,nightmare:f.mission.nightmare},enemy:{faction:f.mission.faction,minLevel:f.mission.minEnemyLevel,maxLevel:f.mission.maxEnemyLevel},reward:{types:f.rewardTypes,items:f.mission.reward.items,countedItems:f.mission.reward.countedItems,credits:f.mission.reward.credits,string:f.mission.reward.itemString||f.mission.reward.asString}}}),a(d)}).catch(c=>b(c))})}get sorties(){return new Promise((a,b)=>{fetch(`${this.endpoint}/sortie`).then(c=>c.json()).then(c=>{a({id:c.id,since:new Date(c.activation),until:new Date(c.expiry),countdown:c.eta,missions:c.variants.map(d=>{return{node:d.node,type:d.missionType,condition:d.modifier,conditionDescription:d.modifierDescription}}),enemy:{faction:c.faction,boss:c.boss}})}).catch(c=>b(c))})}get cycleCetus(){return new Promise((a,b)=>{fetch(`${this.endpoint}/cetusCycle`).then(c=>c.json()).then(c=>{a({state:c.isDay?"day":"night",until:new Date(c.expiry),timeLeft:c.timeLeft,string:c.shortString})}).catch(c=>b(c))})}get cycleEarth(){return new Promise((a,b)=>{fetch(`${this.endpoint}/earthCycle`).then(c=>c.json()).then(c=>{let d=c.isDay?"Day":"Night";a({state:d.toLowerCase(),until:new Date(c.expiry),timeLeft:c.timeLeft,string:`${c.timeLeft.replace(/ \d{1,2}s/gmi,"")} to ${d}`})}).catch(c=>b(c))})}get voidTrader(){return new Promise(a=>{fetch(`${this.endpoint}/voidTrader`).then(c=>c.json()).then(c=>{let d=c.character;a({id:c.id,from:new Date(c.activation),until:new Date(c.expiry),name:d,relay:c.location,goodies:c.inventory,active:c.active,fromString:`${d} arrives in ${c.startString}`,untilString:`${d} leaves in ${c.endString}`})})})}get events(){return new Promise((a,b)=>{fetch(`${this.endpoint}/events`).then(c=>c.json()).then(()=>{b(new Error("Preprecated"))})})}get news(){return new Promise((a,b)=>{fetch(`${this.endpoint}/news`).then(c=>c.json()).then(c=>{c=c.map(d=>{let f="";return d.update&&(f="Update"),d.primeAccess&&(f="Prime Access"),d.stream&&(f="Stream"),{id:d.id,link:d.link,date:new Date(d.date),since:d.eta,art:f,image:d.imageLink,langStrings:d.translations}}),a(c)}).catch(c=>b(c))})}get syndicateMissions(){return new Promise((a,b)=>{fetch(`${this.endpoint}/syndicateMissions`).then(c=>c.json()).then(c=>{c=c.map(d=>{let f={id:d.id,since:new Date(d.activation),until:new Date(d.expiry),syndicate:d.syndicate};return[]!==d.nodes&&(f.nodes=d.nodes),[]!==d.jobs&&(f.jobs=d.jobs.map(g=>{return{id:g.id,type:g.type,enemy:{minLevel:g.enemyLevels[0],maxLevel:g.enemyLevels[1]},standingStages:g.standingStages,rewardPool:g.rewardPool}})),f}),a(c)}).catch(c=>b(c))})}get fissures(){return new Promise((a,b)=>{fetch(`${this.endpoint}/fissures`).then(c=>c.json()).then(c=>{c=c.map(d=>{return{id:d.id,node:d.node,type:d.missionType,since:new Date(d.activation),until:new Date(d.expiry),countdown:d.eta,tierClass:d.tier,tierNum:d.tierNum,enemy:{faction:d.enemy}}}),a(c)}).catch(c=>b(c))})}get darkSectors(){return new Promise((a,b)=>{fetch(`${this.endpoint}/darkSectors`).then(c=>c.json()).then(c=>{a(c)}).catch(c=>b(c))})}get invasions(){return new Promise(a=>{fetch(`${this.endpoint}/invasions`).then(c=>c.json()).then(c=>{c=c.map(d=>{return d.countdown=d.eta,d.eta=void 0,delete d.eta,d.attackerReward.color=void 0,delete d.attackerReward.color,d.defenderReward.color=void 0,delete d.defenderReward.color,d.from=new Date(d.activation),d.activation=void 0,delete d.activation,d}),c=c.filter(d=>!d.completed),a(c)})})}get dailyDeals(){return new Promise((a,b)=>{fetch(`${this.endpoint}/dailyDeals`).then(c=>c.json()).then(c=>{a(c.map(d=>{return d.countdown=d.eta,d.eta=void 0,delete d.eta,d.until=new Date(d.expiry),d.expiry=void 0,delete d.expiry,d}))}).catch(c=>b(c))})}get simaris(){return fetch(`${this.endpoint}/simaris`).then(a=>a.json())}get conclaveChallenges(){return new Promise(a=>{fetch(`${this.endpoint}/conclaveChallenges`).then(c=>c.json()).then(c=>{a(c.map(d=>{return d.countdown=d.eta,d.eta=void 0,delete d.eta,d.until=new Date(d.expiry),d.expiry=void 0,delete d.expiry,d}).filter(d=>!d.expired))})})}};